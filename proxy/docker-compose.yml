version: "3"
services:
    traefik:
        image: traefik
        container_name: traefik
        networks:
            - proxy
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/acme.json:/letsencrypt/acme.json
            - ./data/traefik.yml:/etc/traefik/traefik.yml
            - ./data/conf:/extra-conf
        env_file:
            - ./proxy.env
        labels:
            - "traefik.enable=true"
              # global redirect to https
            - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
            - "traefik.http.routers.http-catchall.entrypoints=http"
            - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

              # global wildcard certificates
            - "traefik.http.routers.proxy.tls.certresolver=acme"
            - "traefik.http.routers.proxy.tls.domains[0].main=draganczuk.cloud"
            - "traefik.http.routers.proxy.tls.domains[0].sans=*.draganczuk.cloud"
            - "traefik.http.routers.proxy.tls.domains[1].main=draganczuk.me"
            - "traefik.http.routers.proxy.tls.domains[1].sans=*.draganczuk.me"

              # Proxy dashboard
            - "traefik.http.routers.proxy.entrypoints=https"
            - "traefik.http.routers.proxy.rule=Host(`proxy.draganczuk.cloud`)"
            - "traefik.http.routers.proxy.service=api@internal"
            - "traefik.http.routers.proxy.middlewares=auth@file"
    traefik-auth:
        container_name: traefik-auth
        image: thomseddon/traefik-forward-auth
        depends_on:
            - traefik
        env_file: proxy.env
        networks:
            - proxy
        labels:
            traefik.enable: true
            traefik.http.routers.sso.entrypoints: https
            traefik.http.routers.sso.rule: Host("sso.draganczuk.cloud")
            traefik.http.routers.sso.tls: true
            traefik.http.routers.sso.service: sso@docker
            traefik.http.services.sso.loadbalancer.server.port: 4181
            traefik.http.routers.sso.middlewares: auth@file # <-- APPLY MIDDLEWARE TO ITSELF
            restart: unless-stopped

networks:
    proxy:
        external: true
